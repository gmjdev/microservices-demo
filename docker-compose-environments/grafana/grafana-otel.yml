
version: '3.8'
services:
  minio:
    image: minio/minio
    entrypoint: [ "" ]
    command: [ "sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data" ]
    environment:
      - MINIO_ROOT_USER=${MINIO_USR}
      - MINIO_ROOT_PASSWORD=${MINIO_PHRASE}
    volumes:
      - minio-data:/data
    networks:
      - services-tier
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_LOG_LEVEL=warn
      - GF_LOG_MODE=console
      - GF_AUTH_ANONYMOUS_ENABLED=${GRAFANA_ENABLE_ANONYMOUS}
      - GF_AUTH_ANONYMOUS_ORG_ROLE=${GRAFANA_ANONYMOUS_ROLE}
    restart: unless-stopped
    volumes:
      - ${HOME}/docker-mount/grafana:/var/lib/grafana
      - ./datasource/mimir-ds.yml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
    networks:
      - services-tier
  mimir-1:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir.yaml" ]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yml:/etc/mimir.yaml
      - mimir-1-data:/data
    networks:
      - services-tier
  mimir-2:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir.yaml" ]
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yml:/etc/mimir.yaml
      - mimir-2-data:/data
    networks:
      - services-tier
  mimir-3:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir.yaml" ]
    hostname: mimir-3
    depends_on:
      - minio
    volumes:
      - ./config/mimir.yml:/etc/mimir.yaml
      - mimir-3-data:/data
    networks:
      - services-tier
  load-balancer:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    ports:
      - 9009:9009
    networks:
      - services-tier
  otel-collector:
    image: otel/opentelemetry-collector:0.80.0
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yml" ]
    ports:
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
    restart: unless-stopped
    volumes:
      - ./otel-config.yml:/etc/otel-collector-config.yml
    networks:
      - services-tier
networks:
  services-tier: {}
volumes:
  mimir-1-data:
  mimir-2-data:
  mimir-3-data:
  minio-data: