<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.gm</groupId>
  <artifactId>gm-parent-pom</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>gm-parent-pom</name>
  <properties>
    <java.version>17</java.version>
    <resource.delimiter>@</resource.delimiter>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <spring-boot.version>3.1.2</spring-boot.version>
    <spring-cloud.version>2022.0.4</spring-cloud.version>
    <spring-cloud-eureka-client.version>4.0.3</spring-cloud-eureka-client.version>
    <jib.version>3.3.2</jib.version>
    <git-commit-id.version>4.9.10</git-commit-id.version>
    <container-images-repo>registry.localhost:5001</container-images-repo>
    <java-opts-xmx>256m</java-opts-xmx>
    <java-opts-xms>256m</java-opts-xms>
    <java-opts-xss>256m</java-opts-xss>
    <app-main-class></app-main-class>
    <download-maven-plugin.version>1.7.1</download-maven-plugin.version>
    <container-java-image>
      eclipse-temurin@sha256:956b8bccdb62e0681010a4127e8dba8b9d3f3247dd4004e11e4bdcec71bb7cb8</container-java-image>
    <jib-skip>true</jib-skip>
    <!-- OpenTelemetry Instrumentation Agent download url -->
    <otel-agent-url>
      https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar</otel-agent-url>
    <!-- java instrumentation agents will be extracted relative to this build
    location -->
    <agents-extraction-root>${project.build.directory}/jib-agents</agents-extraction-root>
    <!-- location to place the otel agent -->
    <otel-agent-location>/opt/otel</otel-agent-location>
    <otel-agent-enabled>false</otel-agent-enabled>
    <otel-java-agent>
      -javaagent:${otel-agent-location}/opentelemetry-javaagent.jar</otel-java-agent>
    <otel-svc-name>${project.artifactId}</otel-svc-name>
    <!-- List of exporters to be used for metrics -->
    <otel-metrics-exporter>none</otel-metrics-exporter>
    <!-- List of exporters to be used for logs -->
    <otel-logs-exporter>none</otel-logs-exporter>
    <!-- List of exporters to be used for tracing -->
    <otel-traces-exporter>none</otel-traces-exporter>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        <version>${spring-cloud-eureka-client.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-apache-client4</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure-processor</artifactId>
              </exclude>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
                <goal>build-info</goal>
              </goals>
              <configuration>
                <additionalProperties>
                  <java.version>${java.version}</java.version>
                </additionalProperties>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>${git-commit-id.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>revision</goal>
              </goals>
              <phase>initialize</phase>
              <configuration>
                <generateGitPropertiesFile>true</generateGitPropertiesFile>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib.version}</version>
          <configuration>
            <skip>${jib-skip}</skip>
            <allowInsecureRegistries>true</allowInsecureRegistries>
            <from>
              <image>${container-java-image}</image>
            </from>
            <to>
              <image>
                ${container-images-repo}/${project.artifactId}:${project.version}</image>
              <tags>
                <tag>latest</tag>
                <tag>${project.version}</tag>
              </tags>
            </to>
            <container>
              <creationTime>${maven.build.timestamp}</creationTime>
              <format>OCI</format>
              <jvmFlags>
                <jvmFlag>-Xms${java-opts-xms}</jvmFlag>
                <jvmFlag>-Xmx${java-opts-xmx}</jvmFlag>
                <jvmFlag>-Xdebug</jvmFlag>
                <jvmFlag>-Xss${java-opts-xss}</jvmFlag>
                <jvmFlag>-server</jvmFlag>
                <jvmFlag>-XX:+UseStringDeduplication</jvmFlag>
                <jvmFlag>-XX:+OptimizeStringConcat</jvmFlag>
                <jvmFlag>-XX:+UseG1GC</jvmFlag>
                <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                <jvmFlag>${otel-java-agent}</jvmFlag>
                <!-- Flag to decide whether otel instructmentation should be
                enabled or not -->
                <jvmFlag>-Dotel.javaagent.enabled=${otel-agent-enabled}</jvmFlag>
                <jvmFlag>-Dotel.service.name=${otel-svc-name}</jvmFlag>
                <jvmFlag>-Dotel.metrics.exporter=${otel-metrics-exporter}</jvmFlag>
                <jvmFlag>-Dotel.logs.exporter=${otel-logs-exporter}</jvmFlag>
                <jvmFlag>-Dotel.traces.exporter=${otel-traces-exporter}</jvmFlag>
              </jvmFlags>
              <mainClass>${app-main-class}</mainClass>
            </container>
            <extraDirectories>
              <paths>${agents-extraction-root}</paths>
              <permissions>
                <permission>
                  <file>../scripts/jar-run.sh</file>
                  <mode>755</mode>
                </permission>
              </permissions>
            </extraDirectories>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.googlecode.maven-download-plugin</groupId>
          <artifactId>download-maven-plugin</artifactId>
          <version>${download-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>install-otel-agent</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>wget</goal>
              </goals>
              <configuration>
                <url>${otel-agent-url}</url>
                <unpack>false</unpack>
                <outputDirectory>
                  ${agents-extraction-root}/${otel-agent-location}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <modules>
    <module>gm-commons-spring-boot-starter</module>
    <module>configuration-svc</module>
    <module>service-registry-svc</module>
    <module>gateway-svc</module>
    <module>greet-svc</module>
  </modules>
</project>